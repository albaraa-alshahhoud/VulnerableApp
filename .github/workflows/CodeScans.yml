name: Security Code Scans & Semgrep

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  codeql:
    name: Run CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Build with Gradle
        run: ./gradlew --no-daemon --stacktrace --warning-mode all build

      - name: Ensure SARIF Directory Exists
        run: mkdir -p ./results

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: ./results/codeql.sarif

      - name: Install CodeQL CLI
        run: |
          mkdir -p ~/codeql
          curl -L https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.zip -o ~/codeql/codeql.zip
          unzip ~/codeql/codeql.zip -d ~/codeql
          echo "export PATH=\"$HOME/codeql/codeql:\$PATH\"" >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Run CodeQL Analysis and Output JSON
        run: |
          codeql database create codeql-db --language=java
          codeql database analyze codeql-db --format=json --output=./results/codeql_defectdojo.json

      - name: Upload CodeQL SARIF Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: ./results/codeql.sarif

      - name: Upload CodeQL DefectDojo JSON Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-defectdojo-results
          path: ./results/codeql_defectdojo.json

  semgrep:
    name: Run Semgrep Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: pip install semgrep

      - name: Ensure Results Directory Exists
        run: mkdir -p ./results

      - name: Run Semgrep for Java (SARIF Output)
        run: semgrep --config=p/java --sarif --output ./results/semgrep.sarif || true

      - name: Run Semgrep for Java (JSON Output)
        run: semgrep --config=p/java --json --output ./results/semgrep_defectdojo.json || true

      - name: Upload Semgrep SARIF Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: ./results/semgrep.sarif

      - name: Upload Semgrep DefectDojo JSON Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-defectdojo-results
          path: ./results/semgrep_defectdojo.json
